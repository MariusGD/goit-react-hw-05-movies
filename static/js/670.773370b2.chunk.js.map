{"version":3,"file":"static/js/670.773370b2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","Pages/Movies.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"FormContainer\":\"SearchForm_FormContainer__AFBBZ\",\"Form\":\"SearchForm_Form__vRFa9\",\"InputStyled\":\"SearchForm_InputStyled__VZW0I\",\"ButtonStyled\":\"SearchForm_ButtonStyled__9O4tk\"};","import { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport styles from './SearchForm.module.css';\n\nexport const SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('searchQuery') ?? '';\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const inputValue = evt.target.elements.searchQuery.value.trim();\n\n    if (inputValue === '') {\n      toast.error(\"You didn't enter anything. Try again!\");\n      return;\n    }\n\n    setSearchParams({ searchQuery: inputValue });\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <div className={styles.FormContainer}>\n      <form className={styles.Form} autoComplete=\"off\" onSubmit={handleSubmit}>\n        <input\n          className={styles.InputStyled}\n          type=\"text\"\n          placeholder=\"Enter movie name...\"\n          name=\"searchQuery\"\n          defaultValue={search}\n        />\n        <button className={styles.ButtonStyled} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from '../components/Services/ApiMovies';\nimport { SearchForm } from '../components/SearchForm/SearchForm';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { Loader } from '../components/Loader/Loader';\nimport { ColorRing } from 'react-loader-spinner';\nimport toast from 'react-hot-toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParam] = useSearchParams();\n  const query = searchParam.get('searchQuery');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovies(query);\n\n        setMovies([...data.results]);\n\n        if (!data.results.length) {\n          return toast.error(\n            'Sorry, no movies were found for your search. Please try again.'\n          );\n        }\n      } catch (error) {\n        console.error('Error fetching movies:', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [query]);\n\n  return (\n    <div>\n      {isLoading && (\n        <Loader>\n          <ColorRing\n            visible={true}\n            height=\"180\"\n            width=\"180\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </Loader>\n      )}\n      <SearchForm />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"LoaderContainer\":\"Loader_LoaderContainer__Ke+vb\"};","import PropTypes from 'prop-types';\nimport styles from './Loader.module.css';\n\nexport const Loader = ({ children }) => {\n  return <div className={styles.LoaderContainer}>{children}</div>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"StyledLink\":\"MoviesList_StyledLink__P+Y+F\",\"Ul\":\"MoviesList_Ul__CNRlP\",\"Li\":\"MoviesList_Li__HOVtT\",\"Poster\":\"MoviesList_Poster__VFpM0\",\"MovieTitle\":\"MoviesList_MovieTitle__GiMs2\",\"P\":\"MoviesList_P__cqorR\"};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const defaultMovieImg = 'https://i.ibb.co/Vq9rRZk/no-image-meme-2.png';\n\n  return (\n    <ul className={styles.Ul}>\n      {movies.map(movie => (\n        <li className={styles.Li} key={movie.id}>\n          <Link\n            className={styles.StyledLink}\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            <img\n              className={styles.Poster}\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultMovieImg\n              }\n              alt={movie.title}\n            />\n            <p className={styles.MovieTitle}>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n"],"names":["SearchForm","_searchParams$get","searchParams","setSearchParams","useSearchParams","search","get","_jsx","className","styles","children","_jsxs","autoComplete","onSubmit","evt","preventDefault","inputValue","target","elements","searchQuery","value","trim","currentTarget","reset","toast","type","placeholder","name","defaultValue","Movies","movies","setMovies","useState","isLoading","setIsLoading","searchParam","query","useEffect","async","data","fetchMovies","results","length","error","console","message","fetchData","Loader","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","MoviesList","_ref","location","useLocation","map","movie","Link","to","concat","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}